#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library. 
// On an arduino UNO:       A4(SDA), A5(SCL)
// On an arduino MEGA 2560: 20(SDA), 21(SCL)
// On an arduino LEONARDO:   2(SDA),  3(SCL), ...
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// 'Healthy Cast_oled', 128x32px
const unsigned char myBitmap [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x30, 0xc0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x47, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x10, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x10, 0x08, 0x04, 0x02, 0x26, 0xc4, 0x23, 0xf4, 0x5f, 0x80, 0x6c, 0x42, 0x5d, 0xf2, 0x00, 
  0x04, 0x00, 0x08, 0x02, 0x02, 0x20, 0xc2, 0x20, 0x44, 0x51, 0x00, 0x40, 0x64, 0x01, 0x00, 0x00, 
  0x04, 0x08, 0x38, 0x02, 0x02, 0x29, 0x0a, 0x20, 0x44, 0x49, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 
  0x00, 0x01, 0x8e, 0x00, 0x03, 0xea, 0x0a, 0x20, 0x47, 0xc9, 0x00, 0x00, 0x81, 0xc1, 0x00, 0x00, 
  0x08, 0x06, 0x01, 0x01, 0x02, 0x28, 0x11, 0x20, 0x44, 0x4a, 0x00, 0x01, 0x10, 0x21, 0x00, 0x00, 
  0x08, 0x00, 0x00, 0x81, 0x02, 0x24, 0x11, 0x20, 0x44, 0x46, 0x00, 0x41, 0x10, 0x21, 0x00, 0x00, 
  0x08, 0x0a, 0x00, 0x41, 0x02, 0x27, 0xef, 0xbc, 0x44, 0x44, 0x00, 0x7c, 0xff, 0xc1, 0x00, 0x00, 
  0x08, 0x09, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x08, 0x01, 0x08, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0xf0, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x10, 0x30, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x10, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x00, 0x10, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x1c, 0x08, 0xc4, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x1e, 0x07, 0x08, 0x00, 0x00, 0x0c, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x1e, 0x00, 0x08, 0x00, 0x00, 0x70, 0x7f, 0xff, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xc0, 0x00, 0x10, 0x00, 0x01, 0x40, 0x1f, 0xfc, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x80, 0x3f, 0x7f, 0xff, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x18, 0x00, 0x80, 0x00, 0x0a, 0x00, 0x3e, 0xbf, 0xff, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x0e, 0x00, 0x00, 0x04, 0x00, 0x7c, 0x7f, 0xdf, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xf0, 0x00, 0x00, 0x1c, 0x00, 0x7e, 0xff, 0x9e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0xff, 0xff, 0xbe, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup(){
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
  display.clearDisplay(); //for Clearing the display
  display.drawBitmap(0, 0, myBitmap, 128, 32, WHITE); // display.drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
  display.display();
}

void loop() { }
